# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    specification.txt                                  :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: mac <mac@student.42.fr>                    +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2024/11/01 02:00:58 by mac               #+#    #+#              #
#    Updated: 2024/11/01 02:01:08 by mac              ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

one or more philosophers sit at a round table.

There is a large bowl of spaghetti in the middle of the table.

The philosophers alternatively eat, think, or sleep

While they are eating, they are not thinking nor sleeping;

while thinking, they are not eating nor sleeping;

and, of course, while sleeping, they are not eating nor thinking.

There are also forks on the table.

There are as many forks as philosophers.

Because serving and eating spaghetti with only one fork is very inconvenient,
a philosopher takes their right and their left forks to eat, one in each hand.

When a philosopher has finished eating, they put their forks back on the table and start sleeping.

Once awake, they start thinking again. The simulation stops when a philosopher dies of starvation.

Every philosopher needs to eat and should never starve. • Philosophers don’t speak with each other.

Philosophers don’t know if another philosopher is about to die.

No need to say that philosophers should avoid dying!

Your(s) program(s) should take the following arguments:
number_of_philosophers = number of forks
time_to_die (millisecond)
time_to_eat (millisecond)
time_to_sleep (millisecond)
[number_of_times_each_philosopher_must_eat] - if specified and met, simulation stops. If not specified, simulation stops when one dies.

Each philosopher has a number ranging from 1 to number_of_philosophers.

Any state change of a philosopher must be formatted as follows:
◦ timestamp_in_ms X has taken a fork
◦ timestamp_in_ms X is eating
◦ timestamp_in_ms X is sleeping
◦ timestamp_in_ms X is thinking
◦ timestamp_in_ms X died
Replace timestamp_in_ms with the current timestamp in milliseconds and X with the philosopher number.

*** Your program must not have any data races.
